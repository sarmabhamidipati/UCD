"""
Preparing a report
In this case, template strings are the best solution to interpolate data generated by external sources into an
already created template.

For this example, the variables tool1, tool2 and tool3 contain three article titles.
Each variable description1, description2 and description3 contains the corresponding article description.

If you want to explore the variables, you can use print() to view them in the IPython Shell.
Complete the template using $tool and $description identifiers.
Substitute identifiers with the correct tool and description variables in the template and print out the results.
"""
from string import Template

tool1 = "Natural Language Toolkit"
tool2 = "TextBlob"
tool3 = "Gensim"
description1 = "suite of libraries and programs for symbolic and statistical natural language processing (NLP) for " \
               "English written in the Python programming language. It was developed by Steven Bird and Edward Loper " \
               "in the Department of Computer and Information Science at the University of Pennsylvania."
description2 = "Python library for processing textual data. It provides a simple API for diving into common natural " \
               "language processing tasks such as part-of-speech tagging, noun phrase extraction, sentiment " \
               "analysis, classification, translation, and more."
description3 = "robust open-source vector space modeling and topic modeling toolkit implemented in Python. " \
               "It uses NumPy, SciPy and optionally Cython for performance. Gensim is specifically designed to " \
               "handle large text collections, using data streaming and efficient incremental algorithms, " \
               "which differentiates it from most other scientific software packages that only target " \
               "batch and in-memory processing."


# Create a template
wikipedia = Template("$tool is a $description")

# Substitute variables in template
print(wikipedia.substitute(tool=tool1, description=description1))
print(wikipedia.substitute(tool=tool2, description=description2))
print(wikipedia.substitute(tool=tool3, description=description3))